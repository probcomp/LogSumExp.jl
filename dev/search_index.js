var documenterSearchIndex = {"docs":
[{"location":"","page":"LogSumExp.jl","title":"LogSumExp.jl","text":"CurrentModule = LogSumExp","category":"page"},{"location":"#LogSumExp.jl","page":"LogSumExp.jl","title":"LogSumExp.jl","text":"","category":"section"},{"location":"","page":"LogSumExp.jl","title":"LogSumExp.jl","text":"A Julia implementation of logsumexp.","category":"page"},{"location":"","page":"LogSumExp.jl","title":"LogSumExp.jl","text":"Modules = [LogSumExp]","category":"page"},{"location":"#LogSumExp.logsumexp-Tuple{AbstractArray{var\"#s16\",N} where N where var\"#s16\"<:Real}","page":"LogSumExp.jl","title":"LogSumExp.logsumexp","text":"logsumexp(a; dims=:)\n\nComputes the log-sum-exp. Mathematically equivalent to\n\nlog.(sum(exp.(a); dims=dims))\n\nbut more numerically stable.\n\nnote: Note on treatment of dims\nNote that, in keeping with the other Julia array operations, no dims are dropped in the output of logsumexp; instead,size(logsumexp(a; dims=dims), d) == 1for each d in dims.  For example:julia> a = rand(2, 3, 4, 5);\n\njulia> size(logsumexp(a; dims=(1,3)))\n(1, 3, 1, 5)For a variant of logsumexp that does drop dims, see reduce_logsumexp.\n\n\n\n\n\n","category":"method"},{"location":"#LogSumExp.reduce_logsumexp-Tuple{AbstractArray{var\"#s13\",N} where N where var\"#s13\"<:Real}","page":"LogSumExp.jl","title":"LogSumExp.reduce_logsumexp","text":"reduce_logsumexp(a; dims=:)\n\nLike logsumexp, but drops the dims dims in the output.\n\njulia> a = rand(2, 3, 4, 5);\n\njulia> size(reduce_logsumexp(a; dims=(1,3)))\n(3, 5)\n\n\n\n\n\n","category":"method"}]
}
